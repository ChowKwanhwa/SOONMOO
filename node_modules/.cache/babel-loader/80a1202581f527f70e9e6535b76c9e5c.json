{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AppReadyEvent_detail;\nlet wallets = undefined;\nconst registered = new Set();\nconst listeners = {};\n/**\n * Get an API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * When called for the first time --\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowAppReadyEvent} to notify each Wallet that the app is ready\n * to register it.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to listen for a notification\n * from each Wallet that the Wallet is ready to be registered by the app.\n *\n * This combination of event dispatch and listener guarantees that each Wallet will be registered synchronously as soon\n * as the app is ready whether the app loads before or after each Wallet.\n *\n * @return API for getting, listening for, and registering Wallets.\n *\n * @group App\n */\nexport function getWallets() {\n  if (wallets) return wallets;\n  wallets = Object.freeze({\n    register,\n    get,\n    on\n  });\n  if (typeof window === 'undefined') return wallets;\n  const api = Object.freeze({\n    register\n  });\n  try {\n    window.addEventListener('wallet-standard:register-wallet', _ref => {\n      let {\n        detail: callback\n      } = _ref;\n      return callback(api);\n    });\n  } catch (error) {\n    console.error('wallet-standard:register-wallet event listener could not be added\\n', error);\n  }\n  try {\n    window.dispatchEvent(new AppReadyEvent(api));\n  } catch (error) {\n    console.error('wallet-standard:app-ready event could not be dispatched\\n', error);\n  }\n  return wallets;\n}\nfunction register() {\n  var _listeners$register;\n  for (var _len = arguments.length, wallets = new Array(_len), _key = 0; _key < _len; _key++) {\n    wallets[_key] = arguments[_key];\n  }\n  // Filter out wallets that have already been registered.\n  // This prevents the same wallet from being registered twice, but it also prevents wallets from being\n  // unregistered by reusing a reference to the wallet to obtain the unregister function for it.\n  wallets = wallets.filter(wallet => !registered.has(wallet));\n  // If there are no new wallets to register, just return a no-op unregister function.\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  if (!wallets.length) return () => {};\n  wallets.forEach(wallet => registered.add(wallet));\n  (_listeners$register = listeners['register']) === null || _listeners$register === void 0 ? void 0 : _listeners$register.forEach(listener => guard(() => listener(...wallets)));\n  // Return a function that unregisters the registered wallets.\n  return function unregister() {\n    var _listeners$unregister;\n    wallets.forEach(wallet => registered.delete(wallet));\n    (_listeners$unregister = listeners['unregister']) === null || _listeners$unregister === void 0 ? void 0 : _listeners$unregister.forEach(listener => guard(() => listener(...wallets)));\n  };\n}\nfunction get() {\n  return [...registered];\n}\nfunction on(event, listener) {\n  var _listeners$event;\n  ((_listeners$event = listeners[event]) === null || _listeners$event === void 0 ? void 0 : _listeners$event.push(listener)) || (listeners[event] = [listener]);\n  // Return a function that removes the event listener.\n  return function off() {\n    var _listeners$event2;\n    listeners[event] = (_listeners$event2 = listeners[event]) === null || _listeners$event2 === void 0 ? void 0 : _listeners$event2.filter(existingListener => listener !== existingListener);\n  };\n}\nfunction guard(callback) {\n  try {\n    callback();\n  } catch (error) {\n    console.error(error);\n  }\n}\nclass AppReadyEvent extends Event {\n  constructor(api) {\n    super('wallet-standard:app-ready', {\n      bubbles: false,\n      cancelable: false,\n      composed: false\n    });\n    _AppReadyEvent_detail.set(this, void 0);\n    __classPrivateFieldSet(this, _AppReadyEvent_detail, api, \"f\");\n  }\n  get detail() {\n    return __classPrivateFieldGet(this, _AppReadyEvent_detail, \"f\");\n  }\n  get type() {\n    return 'wallet-standard:app-ready';\n  }\n  /** @deprecated */\n  preventDefault() {\n    throw new Error('preventDefault cannot be called');\n  }\n  /** @deprecated */\n  stopImmediatePropagation() {\n    throw new Error('stopImmediatePropagation cannot be called');\n  }\n  /** @deprecated */\n  stopPropagation() {\n    throw new Error('stopPropagation cannot be called');\n  }\n}\n_AppReadyEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link getWallets} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_getWallets() {\n  if (wallets) return wallets;\n  wallets = getWallets();\n  if (typeof window === 'undefined') return wallets;\n  const callbacks = window.navigator.wallets || [];\n  if (!Array.isArray(callbacks)) {\n    console.error('window.navigator.wallets is not an array');\n    return wallets;\n  }\n  const {\n    register\n  } = wallets;\n  const push = function () {\n    for (var _len2 = arguments.length, callbacks = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      callbacks[_key2] = arguments[_key2];\n    }\n    return callbacks.forEach(callback => guard(() => callback({\n      register\n    })));\n  };\n  try {\n    Object.defineProperty(window.navigator, 'wallets', {\n      value: Object.freeze({\n        push\n      })\n    });\n  } catch (error) {\n    console.error('window.navigator.wallets could not be set');\n    return wallets;\n  }\n  push(...callbacks);\n  return wallets;\n}","map":{"version":3,"names":["wallets","undefined","registered","Set","listeners","getWallets","Object","freeze","register","get","on","window","api","addEventListener","_ref","detail","callback","error","console","dispatchEvent","AppReadyEvent","_listeners$register","_len","arguments","length","Array","_key","filter","wallet","has","forEach","add","listener","guard","unregister","_listeners$unregister","delete","event","_listeners$event","push","off","_listeners$event2","existingListener","Event","constructor","bubbles","cancelable","composed","_AppReadyEvent_detail","set","__classPrivateFieldSet","__classPrivateFieldGet","type","preventDefault","Error","stopImmediatePropagation","stopPropagation","DEPRECATED_getWallets","callbacks","navigator","isArray","_len2","_key2","defineProperty","value"],"sources":["/workspaces/SOONMOO/node_modules/@wallet-standard/app/src/wallets.ts"],"sourcesContent":["import type {\n    DEPRECATED_WalletsCallback,\n    DEPRECATED_WalletsWindow,\n    Wallet,\n    WalletEventsWindow,\n    WindowAppReadyEvent,\n    WindowAppReadyEventAPI,\n} from '@wallet-standard/base';\n\nlet wallets: Wallets | undefined = undefined;\nconst registered = new Set<Wallet>();\nconst listeners: { [E in WalletsEventNames]?: WalletsEventsListeners[E][] } = {};\n\n/**\n * Get an API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * When called for the first time --\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowAppReadyEvent} to notify each Wallet that the app is ready\n * to register it.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to listen for a notification\n * from each Wallet that the Wallet is ready to be registered by the app.\n *\n * This combination of event dispatch and listener guarantees that each Wallet will be registered synchronously as soon\n * as the app is ready whether the app loads before or after each Wallet.\n *\n * @return API for getting, listening for, and registering Wallets.\n *\n * @group App\n */\nexport function getWallets(): Wallets {\n    if (wallets) return wallets;\n    wallets = Object.freeze({ register, get, on });\n    if (typeof window === 'undefined') return wallets;\n\n    const api = Object.freeze({ register });\n    try {\n        (window as WalletEventsWindow).addEventListener('wallet-standard:register-wallet', ({ detail: callback }) =>\n            callback(api)\n        );\n    } catch (error) {\n        console.error('wallet-standard:register-wallet event listener could not be added\\n', error);\n    }\n    try {\n        (window as WalletEventsWindow).dispatchEvent(new AppReadyEvent(api));\n    } catch (error) {\n        console.error('wallet-standard:app-ready event could not be dispatched\\n', error);\n    }\n\n    return wallets;\n}\n\n/**\n * API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * @group App\n */\nexport interface Wallets {\n    /**\n     * Get all Wallets that have been registered.\n     *\n     * @return Registered Wallets.\n     */\n    get(): readonly Wallet[];\n\n    /**\n     * Add an event listener and subscribe to events for Wallets that are\n     * {@link WalletsEventsListeners.register | registered} and\n     * {@link WalletsEventsListeners.unregister | unregistered}.\n     *\n     * @param event    Event type to listen for. {@link WalletsEventsListeners.register | `register`} and\n     * {@link WalletsEventsListeners.unregister | `unregister`} are the only event types.\n     * @param listener Function that will be called when an event of the type is emitted.\n     *\n     * @return\n     * `off` function which may be called to remove the event listener and unsubscribe from events.\n     *\n     * As with all event listeners, be careful to avoid memory leaks.\n     */\n    on<E extends WalletsEventNames>(event: E, listener: WalletsEventsListeners[E]): () => void;\n\n    /**\n     * Register Wallets. This can be used to programmatically wrap non-standard wallets as Standard Wallets.\n     *\n     * Apps generally do not need to, and should not, call this.\n     *\n     * @param wallets Wallets to register.\n     *\n     * @return\n     * `unregister` function which may be called to programmatically unregister the registered Wallets.\n     *\n     * Apps generally do not need to, and should not, call this.\n     */\n    register(...wallets: Wallet[]): () => void;\n}\n\n/**\n * Types of event listeners of the {@link Wallets} API.\n *\n * @group App\n */\nexport interface WalletsEventsListeners {\n    /**\n     * Emitted when Wallets are registered.\n     *\n     * @param wallets Wallets that were registered.\n     */\n    register(...wallets: Wallet[]): void;\n\n    /**\n     * Emitted when Wallets are unregistered.\n     *\n     * @param wallets Wallets that were unregistered.\n     */\n    unregister(...wallets: Wallet[]): void;\n}\n\n/**\n * Names of {@link WalletsEventsListeners} that can be listened for.\n *\n * @group App\n */\nexport type WalletsEventNames = keyof WalletsEventsListeners;\n\n/**\n * @deprecated Use {@link WalletsEventsListeners} instead.\n *\n * @group Deprecated\n */\nexport type WalletsEvents = WalletsEventsListeners;\n\nfunction register(...wallets: Wallet[]): () => void {\n    // Filter out wallets that have already been registered.\n    // This prevents the same wallet from being registered twice, but it also prevents wallets from being\n    // unregistered by reusing a reference to the wallet to obtain the unregister function for it.\n    wallets = wallets.filter((wallet) => !registered.has(wallet));\n    // If there are no new wallets to register, just return a no-op unregister function.\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    if (!wallets.length) return () => {};\n\n    wallets.forEach((wallet) => registered.add(wallet));\n    listeners['register']?.forEach((listener) => guard(() => listener(...wallets)));\n    // Return a function that unregisters the registered wallets.\n    return function unregister(): void {\n        wallets.forEach((wallet) => registered.delete(wallet));\n        listeners['unregister']?.forEach((listener) => guard(() => listener(...wallets)));\n    };\n}\n\nfunction get(): readonly Wallet[] {\n    return [...registered];\n}\n\nfunction on<E extends WalletsEventNames>(event: E, listener: WalletsEventsListeners[E]): () => void {\n    listeners[event]?.push(listener) || (listeners[event] = [listener]);\n    // Return a function that removes the event listener.\n    return function off(): void {\n        listeners[event] = listeners[event]?.filter((existingListener) => listener !== existingListener);\n    };\n}\n\nfunction guard(callback: () => void) {\n    try {\n        callback();\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nclass AppReadyEvent extends Event implements WindowAppReadyEvent {\n    readonly #detail: WindowAppReadyEventAPI;\n\n    get detail() {\n        return this.#detail;\n    }\n\n    get type() {\n        return 'wallet-standard:app-ready' as const;\n    }\n\n    constructor(api: WindowAppReadyEventAPI) {\n        super('wallet-standard:app-ready', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        this.#detail = api;\n    }\n\n    /** @deprecated */\n    preventDefault(): never {\n        throw new Error('preventDefault cannot be called');\n    }\n\n    /** @deprecated */\n    stopImmediatePropagation(): never {\n        throw new Error('stopImmediatePropagation cannot be called');\n    }\n\n    /** @deprecated */\n    stopPropagation(): never {\n        throw new Error('stopPropagation cannot be called');\n    }\n}\n\n/**\n * @deprecated Use {@link getWallets} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_getWallets(): Wallets {\n    if (wallets) return wallets;\n    wallets = getWallets();\n    if (typeof window === 'undefined') return wallets;\n\n    const callbacks = (window as DEPRECATED_WalletsWindow).navigator.wallets || [];\n    if (!Array.isArray(callbacks)) {\n        console.error('window.navigator.wallets is not an array');\n        return wallets;\n    }\n\n    const { register } = wallets;\n    const push = (...callbacks: DEPRECATED_WalletsCallback[]): void =>\n        callbacks.forEach((callback) => guard(() => callback({ register })));\n    try {\n        Object.defineProperty((window as DEPRECATED_WalletsWindow).navigator, 'wallets', {\n            value: Object.freeze({ push }),\n        });\n    } catch (error) {\n        console.error('window.navigator.wallets could not be set');\n        return wallets;\n    }\n\n    push(...callbacks);\n    return wallets;\n}\n"],"mappings":";;;;;;;;;;;;AASA,IAAIA,OAAO,GAAwBC,SAAS;AAC5C,MAAMC,UAAU,GAAG,IAAIC,GAAG,EAAU;AACpC,MAAMC,SAAS,GAA+D,EAAE;AAEhF;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,SAAUC,UAAUA,CAAA;EACtB,IAAIL,OAAO,EAAE,OAAOA,OAAO;EAC3BA,OAAO,GAAGM,MAAM,CAACC,MAAM,CAAC;IAAEC,QAAQ;IAAEC,GAAG;IAAEC;EAAE,CAAE,CAAC;EAC9C,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAOX,OAAO;EAEjD,MAAMY,GAAG,GAAGN,MAAM,CAACC,MAAM,CAAC;IAAEC;EAAQ,CAAE,CAAC;EACvC,IAAI;IACCG,MAA6B,CAACE,gBAAgB,CAAC,iCAAiC,EAAEC,IAAA;MAAA,IAAC;QAAEC,MAAM,EAAEC;MAAQ,CAAE,GAAAF,IAAA;MAAA,OACpGE,QAAQ,CAACJ,GAAG,CAAC;IAAA,EAChB;GACJ,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qEAAqE,EAAEA,KAAK,CAAC;;EAE/F,IAAI;IACCN,MAA6B,CAACQ,aAAa,CAAC,IAAIC,aAAa,CAACR,GAAG,CAAC,CAAC;GACvE,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;;EAGrF,OAAOjB,OAAO;AAClB;AAkFA,SAASQ,QAAQA,CAAA,EAAqB;EAAA,IAAAa,mBAAA;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAjBxB,OAAiB,OAAAyB,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;IAAjB1B,OAAiB,CAAA0B,IAAA,IAAAH,SAAA,CAAAG,IAAA;EAAA;EAClC;EACA;EACA;EACA1B,OAAO,GAAGA,OAAO,CAAC2B,MAAM,CAAEC,MAAM,IAAK,CAAC1B,UAAU,CAAC2B,GAAG,CAACD,MAAM,CAAC,CAAC;EAC7D;EACA;EACA,IAAI,CAAC5B,OAAO,CAACwB,MAAM,EAAE,OAAO,MAAK,CAAE,CAAC;EAEpCxB,OAAO,CAAC8B,OAAO,CAAEF,MAAM,IAAK1B,UAAU,CAAC6B,GAAG,CAACH,MAAM,CAAC,CAAC;EACnD,CAAAP,mBAAA,GAAAjB,SAAS,CAAC,UAAU,CAAC,cAAAiB,mBAAA,uBAArBA,mBAAA,CAAuBS,OAAO,CAAEE,QAAQ,IAAKC,KAAK,CAAC,MAAMD,QAAQ,CAAC,GAAGhC,OAAO,CAAC,CAAC,CAAC;EAC/E;EACA,OAAO,SAASkC,UAAUA,CAAA;IAAA,IAAAC,qBAAA;IACtBnC,OAAO,CAAC8B,OAAO,CAAEF,MAAM,IAAK1B,UAAU,CAACkC,MAAM,CAACR,MAAM,CAAC,CAAC;IACtD,CAAAO,qBAAA,GAAA/B,SAAS,CAAC,YAAY,CAAC,cAAA+B,qBAAA,uBAAvBA,qBAAA,CAAyBL,OAAO,CAAEE,QAAQ,IAAKC,KAAK,CAAC,MAAMD,QAAQ,CAAC,GAAGhC,OAAO,CAAC,CAAC,CAAC;EACrF,CAAC;AACL;AAEA,SAASS,GAAGA,CAAA;EACR,OAAO,CAAC,GAAGP,UAAU,CAAC;AAC1B;AAEA,SAASQ,EAAEA,CAA8B2B,KAAQ,EAAEL,QAAmC;EAAA,IAAAM,gBAAA;EAClF,EAAAA,gBAAA,GAAAlC,SAAS,CAACiC,KAAK,CAAC,cAAAC,gBAAA,uBAAhBA,gBAAA,CAAkBC,IAAI,CAACP,QAAQ,CAAC,MAAK5B,SAAS,CAACiC,KAAK,CAAC,GAAG,CAACL,QAAQ,CAAC,CAAC;EACnE;EACA,OAAO,SAASQ,GAAGA,CAAA;IAAA,IAAAC,iBAAA;IACfrC,SAAS,CAACiC,KAAK,CAAC,IAAAI,iBAAA,GAAGrC,SAAS,CAACiC,KAAK,CAAC,cAAAI,iBAAA,uBAAhBA,iBAAA,CAAkBd,MAAM,CAAEe,gBAAgB,IAAKV,QAAQ,KAAKU,gBAAgB,CAAC;EACpG,CAAC;AACL;AAEA,SAAST,KAAKA,CAACjB,QAAoB;EAC/B,IAAI;IACAA,QAAQ,EAAE;GACb,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;;AAE5B;AAEA,MAAMG,aAAc,SAAQuB,KAAK;EAW7BC,YAAYhC,GAA2B;IACnC,KAAK,CAAC,2BAA2B,EAAE;MAC/BiC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE;KACb,CAAC;IAfNC,qBAAA,CAAAC,GAAA;IAgBIC,sBAAA,KAAI,EAAAF,qBAAA,EAAWpC,GAAG;EACtB;EAfA,IAAIG,MAAMA,CAAA;IACN,OAAOoC,sBAAA,KAAI,EAAAH,qBAAA,MAAQ;EACvB;EAEA,IAAII,IAAIA,CAAA;IACJ,OAAO,2BAAoC;EAC/C;EAWA;EACAC,cAAcA,CAAA;IACV,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACtD;EAEA;EACAC,wBAAwBA,CAAA;IACpB,MAAM,IAAID,KAAK,CAAC,2CAA2C,CAAC;EAChE;EAEA;EACAE,eAAeA,CAAA;IACX,MAAM,IAAIF,KAAK,CAAC,kCAAkC,CAAC;EACvD;;;AAGJ;;;;;AAKA,OAAM,SAAUG,qBAAqBA,CAAA;EACjC,IAAIzD,OAAO,EAAE,OAAOA,OAAO;EAC3BA,OAAO,GAAGK,UAAU,EAAE;EACtB,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE,OAAOX,OAAO;EAEjD,MAAM0D,SAAS,GAAI/C,MAAmC,CAACgD,SAAS,CAAC3D,OAAO,IAAI,EAAE;EAC9E,IAAI,CAACyB,KAAK,CAACmC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC3BxC,OAAO,CAACD,KAAK,CAAC,0CAA0C,CAAC;IACzD,OAAOjB,OAAO;;EAGlB,MAAM;IAAEQ;EAAQ,CAAE,GAAGR,OAAO;EAC5B,MAAMuC,IAAI,GAAG,SAAAA,CAAA;IAAA,SAAAsB,KAAA,GAAAtC,SAAA,CAAAC,MAAA,EAAIkC,SAAuC,OAAAjC,KAAA,CAAAoC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAvCJ,SAAuC,CAAAI,KAAA,IAAAvC,SAAA,CAAAuC,KAAA;IAAA;IAAA,OACpDJ,SAAS,CAAC5B,OAAO,CAAEd,QAAQ,IAAKiB,KAAK,CAAC,MAAMjB,QAAQ,CAAC;MAAER;IAAQ,CAAE,CAAC,CAAC,CAAC;EAAA;EACxE,IAAI;IACAF,MAAM,CAACyD,cAAc,CAAEpD,MAAmC,CAACgD,SAAS,EAAE,SAAS,EAAE;MAC7EK,KAAK,EAAE1D,MAAM,CAACC,MAAM,CAAC;QAAEgC;MAAI,CAAE;KAChC,CAAC;GACL,CAAC,OAAOtB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAC;IAC1D,OAAOjB,OAAO;;EAGlBuC,IAAI,CAAC,GAAGmB,SAAS,CAAC;EAClB,OAAO1D,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module"}